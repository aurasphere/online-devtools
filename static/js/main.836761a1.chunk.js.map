{"version":3,"sources":["components/header.js","pages/jwe-decrypter.js","index.js"],"names":["Header","props","className","text","jose","require","JSONPretty","JSONPrettyTheme","decodeToken","token","key","a","split","length","tokenType","decodeJwt","decodedToken","decodedHeaders","isError","decodeJwe","payload","headers","jwt_decode","header","console","log","JWK","asKey","k","util","base64url","encode","kty","jwkKey","JWE","createDecrypt","decrypt","decrypted","toString","JweDecrypterPage","useState","setTokenType","decodedTokenPayload","setDecodedTokenPayload","decodedTokenHeaders","setDecodedTokenHeaders","setToken","setKey","errorKey","setErrorKey","recomputeToken","class","href","for","id","onChange","e","target","value","tokenInputClass","rows","placeholder","toUpperCase","type","data","theme","ReactDOM","render","StrictMode","path","document","getElementById"],"mappings":"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","file":"static/js/main.836761a1.chunk.js","sourcesContent":["function Header(props) {\r\n    return (\r\n        <div className=\"flex-fill\">\r\n            <div className=\"d-flex justify-content-center bg-primary p-4\">\r\n                <h3 className=\"text-light\">{props.text}</h3>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\n\r\nimport Header from \"../components/header\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nvar jose = require('node-jose');\r\nvar JSONPretty = require('react-json-pretty');\r\nvar JSONPrettyTheme = require('react-json-pretty/dist/acai');\r\n\r\nfunction JweDecrypterPage() {\r\n    const [tokenType, setTokenType] = useState(\"\");\r\n    const [decodedTokenPayload, setDecodedTokenPayload] = useState(\"\");\r\n    const [decodedTokenHeaders, setDecodedTokenHeaders] = useState(\"\");\r\n    const [token, setToken] = useState(\"\");\r\n    const [key, setKey] = useState(\"\");\r\n    const [errorKey, setErrorKey] = useState(false);\r\n\r\n    const recomputeToken = async (token, key) => {\r\n        const [tokenType, decodedToken, decodedHeaders, errorKey] = await decodeToken(token, key);\r\n        console.log(tokenType)\r\n        console.log(decodedToken)\r\n        setTokenType(tokenType);\r\n        setDecodedTokenPayload(decodedToken);\r\n        setDecodedTokenHeaders(decodedHeaders);\r\n        setErrorKey(errorKey);\r\n    }\r\n\r\n    const onTokenChange = e => {\r\n        const token = e.target.value;\r\n        setToken(token);\r\n        recomputeToken(token, key);\r\n    }\r\n    const onKeyChange = e => {\r\n        const key = e.target.value;\r\n        setKey(key);\r\n        recomputeToken(token, key);\r\n    }\r\n\r\n    const tokenInputClass = () => {\r\n        switch (tokenType) {\r\n            case \"INVALID\": return \"is-invalid\";\r\n            case \"JWT\":\r\n                if (errorKey) {\r\n                    return \"is-invalid\";\r\n                } else {\r\n                    return \"is-valid\";\r\n                }\r\n            case \"JWE\": return \"is-valid\";\r\n            default: return \"\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <Header text=\"JWT/JWE Decrypter\" />\r\n            <form class=\"p-5\">\r\n                <p>Insert a JWE token and the key to decrypt them. All the operations are performed in your browser and no data is sent anywhere. The source code <a href=\"https://github.com/aurasphere/online-devtools\">is available on GitHub.</a></p>\r\n                <div class=\"form-group\">\r\n                    <label for=\"jwe\">JWT/JWE</label>\r\n                    <textarea id=\"jwe\" onChange={onTokenChange}\r\n                        className={`form-control ${tokenInputClass()}`}\r\n                        rows=\"5\" placeholder=\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJNWS1BUFAiLCJjbGFpbS0xIjoidmFsdWUtMSJ9.6Hv6cDrcgR3Lx74VNtVBA4dcl0KCTN9GBlmaqmaM1_w\" />\r\n                    <div class=\"valid-feedback\">{tokenType}</div>\r\n                    <div class=\"invalid-feedback\">INVALID {(tokenType && tokenType !== \"INVALID\") ? tokenType.toUpperCase() : \"TOKEN\"}</div>\r\n                    <br />\r\n                    {tokenType !== \"JWT\" &&\r\n                        <div>\r\n                            <label for=\"key\">Key</label>\r\n                            <input id=\"key\" type=\"text\" onChange={onKeyChange}\r\n                                className={`form-control ${errorKey ? \"is-invalid\" : \"\"}`} placeholder=\"ncLcTSiOET5XteiwCNbnSZJUtGHDxt22\" />\r\n                            <div class=\"invalid-feedback\">INVALID KEY OR TOKEN</div>\r\n                            <br />\r\n                            <br />\r\n                        </div>\r\n                    }\r\n                    {(decodedTokenPayload || decodedTokenHeaders) &&\r\n                        <div>\r\n                            <div class=\"row justify-content-center\">\r\n                                <h3>Decrypted token</h3>\r\n                            </div>\r\n                            <div class=\"row justify-content-center\">\r\n                                <div class=\"col-md-5 col-sm-12 p-0\">\r\n                                    <h4 class=\"text-danger\">Headers</h4>\r\n                                    <JSONPretty data={decodedTokenHeaders} theme={JSONPrettyTheme}></JSONPretty>\r\n                                </div>\r\n                                <div class=\"col-1\"></div>\r\n                                <div class=\"col-md-5 col-sm-12 p-0\">\r\n                                    <h4 class=\"text-info\">Payload</h4>\r\n                                    <JSONPretty data={decodedTokenPayload} theme={JSONPrettyTheme}></JSONPretty>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nasync function decodeToken(token, key) {\r\n    if (token === \"\") {\r\n       return [\"\", \"\", \"\", false];\r\n    }\r\n    let tokenType;\r\n    let decodedToken;\r\n    let decodedHeaders;\r\n    let isError;\r\n    switch (token.split(\".\").length) {\r\n        case 3:\r\n            tokenType = \"JWT\";\r\n            [decodedToken, decodedHeaders, isError] = await decodeJwt(token);\r\n            break;\r\n        case 5:\r\n            tokenType = \"JWE\";\r\n            [decodedToken, decodedHeaders, isError] = await decodeJwe(token, key);\r\n            break;\r\n        default:\r\n            tokenType = \"INVALID\";\r\n            break;\r\n    }\r\n    return [tokenType, decodedToken, decodedHeaders, isError];\r\n}\r\n\r\nasync function decodeJwt(token) {\r\n    let payload = \"\";\r\n    let headers = \"\";\r\n    let isError = false;\r\n    try {\r\n        payload = jwt_decode(token);\r\n        headers = jwt_decode(token, { header: true });\r\n    } catch (err) {\r\n        console.log(\"Error: malformed token \" + err);\r\n        return [\"\", \"\", true];\r\n    }\r\n\r\n    return [payload, headers, isError];\r\n}\r\n\r\nasync function decodeJwe(token, key) {\r\n    const jwkKey = await jose.JWK.asKey({ k: jose.util.base64url.encode(key), kty: \"oct\" });\r\n    let payload = \"\";\r\n    let headers = \"\";\r\n    let isError = false;\r\n    try {\r\n        const decrypted = await jose.JWE.createDecrypt(jwkKey).decrypt(token);\r\n        payload = decrypted.payload.toString();\r\n        headers = decrypted.header;\r\n    } catch (err) {\r\n        console.log(\"Error: is the key wrong? \" + err);\r\n        return [\"\", \"\", true];\r\n    }\r\n\r\n    return [payload, headers, isError];\r\n}\r\n\r\nexport default JweDecrypterPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport JweDecrypterPage from './pages/jwe-decrypter';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path=\"/jwe-decrypter\">\n          <JweDecrypterPage />\n        </Route>\n        <Route path=\"/\">\n          <JweDecrypterPage />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode >,\n  document.getElementById('root')\n);"],"sourceRoot":""}